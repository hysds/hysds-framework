version: 2.1
jobs:
  test:
    docker:
      - image: hysds/pge-base:latest
    steps:
      - checkout
      - run:
          name: Test
          command: |
            source $HOME/verdi/bin/activate
            pip install pytest
            echo 'export PYTHONPATH="$CIRCLE_WORKING_DIRECTORY:$PYTHONPATH"' >> $BASH_ENV
            source $BASH_ENV
            pytest
  build:
    docker:
      - image: docker:18.09-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              python-dev py-pip bash pigz build-base libffi-dev openssl-dev
            pip install \
              docker-compose awscli
      - run:
          name: Build
          command: |
            echo "GIT_OAUTH_TOKEN=${GIT_OAUTH_TOKEN}" > $HOME/.git_oauth_token
            git clone -b develop-es1 --single-branch https://github.com/hysds/hysds-dockerfiles.git
            cd hysds-dockerfiles
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            ./build_release.sh $CIRCLE_TAG hysds develop-es1
            mv images ..
      - persist_to_workspace:
          root: images
          paths:
            - "*"
  deploy:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              curl file
      - attach_workspace:
          at: images
      - run:
          name: Deploy
          command: |
            cd images
            owner=$CIRCLE_PROJECT_USERNAME
            repo=$CIRCLE_PROJECT_REPONAME
            release_id=$(curl -s -H "Authorization: token $GIT_OAUTH_TOKEN" \
              "https://api.github.com/repos/${owner}/${repo}/releases/tags/${CIRCLE_TAG}" \
              | grep '^  "id":' | awk '{print $2}' | sed 's/,//')
            file=hysds-verdi-${CIRCLE_TAG}.tar.gz
            curl -H "Authorization: token $GIT_OAUTH_TOKEN" -H \
              "Content-type: $(file -b --mime-type ${file})" \
              --data-binary @${file} \
              "https://uploads.github.com/repos/${owner}/${repo}/releases/${release_id}/assets?name=${file}"

workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            branches:
              only: develop-es1
  build-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v3.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /^v3.*/
            branches:
              ignore: /.*/
