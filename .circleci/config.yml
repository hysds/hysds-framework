version: 2.1
commands:
  install_deps:
    steps:
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              python3-dev py3-pip bash pigz build-base libffi-dev openssl-dev gcc musl-dev cargo

  prep_env:
    steps:
      - run:
          name: Prepare environment
          command: |
            mkdir -p images
            echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
            echo "GIT_OAUTH_TOKEN=${GIT_OAUTH_TOKEN}" > $HOME/.git_oauth_token
jobs:
  test:
    docker:
      - image: hysds/pge-base:latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Test
          command: |
            source $HOME/verdi/bin/activate
            pip install pytest
            echo 'export PYTHONPATH="$CIRCLE_WORKING_DIRECTORY:$PYTHONPATH"' >> $BASH_ENV
            source $BASH_ENV
            pytest
  build-redis:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      branch:
        type: string
        default: master
      build_tag:
        type: string
      final_tag:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/redis
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/base:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.branch >> https://github.com/<< parameters.org >>/puppet-redis.git redis
            cd redis
            ./build_docker.sh $build_tag << parameters.org >> << parameters.branch >> << parameters.final_tag >>
            cd ..
            rm -rf redis
            docker tag hysds/redis:${build_tag} hysds/redis:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/redis:${build_tag}
            fi
            docker push hysds/redis:<< parameters.final_tag >>
  build-elasticsearch:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      build_tag:
        type: string
      final_tag:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/elasticsearch
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull docker.io/elasticsearch:7.9.3
            docker tag docker.io/elasticsearch:7.9.3 hysds/elasticsearch:${build_tag}
            docker tag hysds/elasticsearch:${build_tag} hysds/elasticsearch:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/elasticsearch:${build_tag}
            fi
            docker push hysds/elasticsearch:<< parameters.final_tag >>
  build-rabbitmq:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      branch:
        type: string
        default: develop
      build_tag:
        type: string
      final_tag:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/rabbitmq
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull docker.io/rabbitmq:3-management
            git clone --single-branch -b << parameters.branch >> https://github.com/<< parameters.org >>/rabbitmq.git
            cd rabbitmq
            docker build --rm --force-rm -t hysds/rabbitmq:${build_tag} -f docker/Dockerfile .
            docker tag hysds/rabbitmq:${build_tag} hysds/rabbitmq:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/rabbitmq:${build_tag}
            fi
            docker push hysds/rabbitmq:<< parameters.final_tag >>
  build-hysds_base:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      branch:
        type: string
        default: develop
      build_tag:
        type: string
      final_tag:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/base
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            git clone --single-branch -b << parameters.branch >> https://github.com/<< parameters.org >>/puppet-hysds_base.git hysds_base
            cd hysds_base
            docker build --rm --force-rm --build-arg ORG=<< parameters.org >> --build-arg BRANCH=<< parameters.branch >> \
              -t hysds/base:${build_tag} -f docker/Dockerfile .
            docker tag hysds/base:${build_tag} hysds/base:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/base:${build_tag}
            fi
            docker push hysds/base:<< parameters.final_tag >>
  build-hysds_cuda_base:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      branch:
        type: string
        default: develop
      build_tag:
        type: string
      final_tag:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/cuda-base
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/base:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.branch >> https://github.com/<< parameters.org >>/puppet-hysds_base.git hysds_base
            cd hysds_base
            docker build --rm --force-rm --build-arg TAG=<< parameters.final_tag >> \
              --build-arg ORG=<< parameters.org >> --build-arg BRANCH=<< parameters.branch >> \
              -t hysds/cuda-base:${build_tag} -f docker/Dockerfile.cuda .
            docker tag hysds/cuda-base:${build_tag} hysds/cuda-base:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/cuda-base:${build_tag}
            fi
            docker push hysds/cuda-base:<< parameters.final_tag >>
  build-hysds_dev:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      branch:
        type: string
        default: develop
      build_tag:
        type: string
      final_tag:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/dev
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/base:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.branch >> https://github.com/<< parameters.org >>/puppet-hysds_dev.git hysds_dev
            cd hysds_dev
            docker build --rm --force-rm --build-arg TAG=<< parameters.final_tag >> \
              --build-arg ORG=<< parameters.org >> --build-arg BRANCH=<< parameters.branch >> \
              -t hysds/dev:${build_tag} -f docker/Dockerfile .
            docker tag hysds/dev:${build_tag} hysds/dev:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/dev:${build_tag}
            fi
            docker push hysds/dev:<< parameters.final_tag >>
  build-hysds_cuda_dev:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      branch:
        type: string
        default: develop
      build_tag:
        type: string
      final_tag:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/cuda-dev
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/cuda-base:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.branch >> https://github.com/<< parameters.org >>/puppet-hysds_dev.git hysds_dev
            cd hysds_dev
            docker build --rm --force-rm --build-arg TAG=<< parameters.final_tag >> \
              --build-arg ORG=<< parameters.org >> --build-arg BRANCH=<< parameters.branch >> \
              -t hysds/cuda-dev:${build_tag} -f docker/Dockerfile.cuda .
            docker tag hysds/cuda-dev:${build_tag} hysds/cuda-dev:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/cuda-dev:${build_tag}
            fi
            docker push hysds/cuda-dev:<< parameters.final_tag >>
  build-hysds_verdi_pge_base:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      puppet_branch:
        type: string
        default: docker
      build_tag:
        type: string
      final_tag:
        type: string
      framework_branch:
        type: string
        default: develop
      hysds_release:
        type: string
        default: develop
      base_branch:
        type: string
        default: develop
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/pge-base and hysds/verdi
          command: |
            set -ex
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/base:<< parameters.final_tag >>
            docker pull hysds/dev:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.puppet_branch >> https://github.com/<< parameters.org >>/puppet-verdi.git
            cd puppet-verdi
            ./build_docker.sh $build_tag << parameters.org >> << parameters.puppet_branch >> << parameters.framework_branch >> << parameters.hysds_release >> << parameters.final_tag >> << parameters.base_branch >>
            cd ..
            rm -rf puppet-verdi
            for i in verdi pge-base; do
              docker tag hysds/${i}:${build_tag} hysds/${i}:<< parameters.final_tag >>
              if [ "$push_build_tag" -eq 1 ]; then
                docker push hysds/${i}:${build_tag}
              fi
              docker push hysds/${i}:<< parameters.final_tag >>
            done
            cd images
            if [ "$push_build_tag" -eq 1 ]; then
              docker save hysds/verdi:<< parameters.build_tag >> > hysds-verdi-<< parameters.build_tag >>.tar
              pigz -f hysds-verdi-<< parameters.build_tag >>.tar
            fi
            docker save hysds/verdi:<< parameters.final_tag >> > hysds-verdi-<< parameters.final_tag >>.tar
            pigz -f hysds-verdi-<< parameters.final_tag >>.tar
            ls -al
      - persist_to_workspace:
          root: images
          paths:
            - "*"
  build-hysds_cuda_pge_base:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      puppet_branch:
        type: string
        default: docker
      build_tag:
        type: string
      final_tag:
        type: string
      framework_branch:
        type: string
        default: develop
      hysds_release:
        type: string
        default: develop
      base_branch:
        type: string
        default: develop
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/cuda-pge-base
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/cuda-base:<< parameters.final_tag >>
            docker pull hysds/cuda-dev:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.puppet_branch >> https://github.com/<< parameters.org >>/puppet-verdi.git
            cd puppet-verdi
            ./build_docker_cuda.sh $build_tag << parameters.org >> << parameters.puppet_branch >> << parameters.framework_branch >> << parameters.hysds_release >> << parameters.final_tag >> << parameters.base_branch >>
            cd ..
            rm -rf puppet-verdi
            docker tag hysds/cuda-pge-base:${build_tag} hysds/cuda-pge-base:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/cuda-pge-base:${build_tag}
            fi
            docker push hysds/cuda-pge-base:<< parameters.final_tag >>
  build-hysds_mozart:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      puppet_branch:
        type: string
        default: docker
      build_tag:
        type: string
      final_tag:
        type: string
      framework_branch:
        type: string
        default: develop
      hysds_release:
        type: string
        default: develop
      base_branch:
        type: string
        default: develop
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/mozart
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/base:<< parameters.final_tag >>
            docker pull hysds/dev:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.puppet_branch >> https://github.com/<< parameters.org >>/puppet-mozart.git
            cd puppet-mozart
            ./build_docker.sh $build_tag << parameters.org >> << parameters.puppet_branch >> << parameters.framework_branch >> << parameters.hysds_release >> << parameters.final_tag >> << parameters.base_branch >>
            cd ..
            rm -rf puppet-mozart
            docker tag hysds/mozart:${build_tag} hysds/mozart:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/mozart:${build_tag}
            fi
            docker push hysds/mozart:<< parameters.final_tag >>
  build-hysds_metrics:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      puppet_branch:
        type: string
        default: docker
      build_tag:
        type: string
      final_tag:
        type: string
      framework_branch:
        type: string
        default: develop
      hysds_release:
        type: string
        default: develop
      base_branch:
        type: string
        default: develop
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/metrics
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/base:<< parameters.final_tag >>
            docker pull hysds/dev:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.puppet_branch >> https://github.com/<< parameters.org >>/puppet-metrics.git
            cd puppet-metrics
            ./build_docker.sh $build_tag << parameters.org >> << parameters.puppet_branch >> << parameters.framework_branch >> << parameters.hysds_release >> << parameters.final_tag >> << parameters.base_branch >>
            cd ..
            rm -rf puppet-metrics
            docker tag hysds/metrics:${build_tag} hysds/metrics:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/metrics:${build_tag}
            fi
            docker push hysds/metrics:<< parameters.final_tag >>
  build-hysds_grq:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      puppet_branch:
        type: string
        default: docker
      build_tag:
        type: string
      final_tag:
        type: string
      framework_branch:
        type: string
        default: develop
      hysds_release:
        type: string
        default: develop
      base_branch:
        type: string
        default: develop
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/grq
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/base:<< parameters.final_tag >>
            docker pull hysds/dev:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.puppet_branch >> https://github.com/<< parameters.org >>/puppet-grq.git
            cd puppet-grq
            ./build_docker.sh $build_tag << parameters.org >> << parameters.puppet_branch >> << parameters.framework_branch >> << parameters.hysds_release >> << parameters.final_tag >> << parameters.base_branch >>
            cd ..
            rm -rf puppet-grq
            docker tag hysds/grq:${build_tag} hysds/grq:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/grq:${build_tag}
            fi
            docker push hysds/grq:<< parameters.final_tag >>
  build-hysds_cont_int:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    #resource_class: large
    parameters:
      org:
        type: string
        default: hysds
      puppet_branch:
        type: string
        default: docker
      build_tag:
        type: string
      final_tag:
        type: string
      framework_branch:
        type: string
        default: develop
      hysds_release:
        type: string
        default: develop
      base_branch:
        type: string
        default: develop
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Build hysds/cont_int
          command: |
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            docker pull hysds/base:<< parameters.final_tag >>
            docker pull hysds/dev:<< parameters.final_tag >>
            git clone --single-branch -b << parameters.puppet_branch >> https://github.com/<< parameters.org >>/puppet-cont_int.git
            cd puppet-cont_int
            ./build_docker.sh $build_tag << parameters.org >> << parameters.puppet_branch >> << parameters.framework_branch >> << parameters.hysds_release >> << parameters.final_tag >> << parameters.base_branch >>
            cd ..
            rm -rf puppet-cont_int
            docker tag hysds/cont_int:${build_tag} hysds/cont_int:<< parameters.final_tag >>
            if [ "$push_build_tag" -eq 1 ]; then
              docker push hysds/cont_int:${build_tag}
            fi
            docker push hysds/cont_int:<< parameters.final_tag >>
  deploy:
    docker:
      - image: alpine:latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    parameters:
      org:
        type: string
        default: $CIRCLE_PROJECT_USERNAME
      repo:
        type: string
        default: $CIRCLE_PROJECT_REPONAME
      build_tag:
        type: string
      final_tag:
        type: string
    steps:
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache curl file
            echo "@community http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
            apk add --no-cache github-cli@community
      - attach_workspace:
          at: images
      - run:
          name: Deploy
          command: |
            set -ex
            export build_tag=<< parameters.build_tag >>
            export push_build_tag=1
            if [ -z "$build_tag" ]; then
              export build_tag=$(date -u +%Y%m%d)
              export push_build_tag=0
            fi
            cd images
            ls -al
            org=<< parameters.org >>
            repo=<< parameters.repo >>
            echo $GIT_OAUTH_TOKEN | gh auth login --with-token
            tag=$(gh release list -R ${org}/${repo} -L 1 | awk 'BEGIN{FS=":"}{print $1}')
            if [ "$push_build_tag" -eq 1 ]; then
              file=hysds-verdi-<< parameters.build_tag >>.tar.gz
              gh release upload ${tag} ${file} -R ${org}/${repo} --clobber
            fi
            repo=hysds-dockerfiles
            tag=$(gh release list -R ${org}/${repo} -L 1 | awk 'BEGIN{FS=":"}{print $1}')
            file=hysds-verdi-<< parameters.final_tag >>.tar.gz
            gh release upload ${tag} ${file} -R ${org}/${repo} --clobber
  export-support-assets:
    docker:
      - image: docker:24.0.9-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - install_deps
      - prep_env
      - run:
          name: Load support assets and save to files
          command: |
            mkdir -p assets
            cd assets
            docker pull registry:2
            docker save registry:2 > docker-registry-2.tar
            pigz -f docker-registry-2.tar

            docker pull hysds/verdi:develop-es1
            docker save hysds/verdi:develop-es1 > hysds-verdi-develop-es1.tar
            pigz -f hysds-verdi-develop-es1.tar

            docker pull hysds/logstash:7.1.1
            docker tag hysds/logstash:7.1.1 logstash:7.1.1
            docker save logstash:7.1.1 > logstash-7.1.1.tar
            pigz -f logstash-7.1.1.tar

            docker pull hysds/logstash:7.9.3
            docker tag hysds/logstash:7.9.3 logstash:7.9.3
            docker save logstash:7.9.3 > logstash-7.9.3.tar
            pigz -f logstash-7.9.3.tar

            docker pull opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.3
            docker tag opensearchproject/logstash-oss-with-opensearch-output-plugin:7.16.3 logstash-oss:7.16.3
            docker save logstash-oss:7.16.3 > logstash-oss-7.16.3.tar
            pigz -f logstash-oss-7.16.3.tar
      - persist_to_workspace:
          root: assets
          paths:
            - "*"
  deploy-support-assets:
    docker:
      - image: alpine:latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    parameters:
      org:
        type: string
        default: $CIRCLE_PROJECT_USERNAME
    steps:
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache curl file
            echo "@community http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
            apk add --no-cache github-cli@community
      - attach_workspace:
          at: assets
      - run:
          name: Deploy
          command: |
            cd assets
            org=<< parameters.org >>
            repo=hysds-dockerfiles
            echo $GIT_OAUTH_TOKEN | gh auth login --with-token
            tag=$(gh release list -R ${org}/${repo} -L 1 | awk 'BEGIN{FS=":"}{print $1}')
            for file in *; do
              gh release upload ${tag} ${file} -R ${org}/${repo} --clobber
            done

workflows:
  version: 2
  test:
    jobs:
      - test:
          context:
            - docker-hub-creds
            - git-oauth-token
  weekly:
    triggers:
      - schedule:
          cron: "0 7 * * 0"
          filters:
            branches:
              only:
                - develop
    jobs:
      - test:
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            branches:
              only: develop
  build-deploy-develop:
    jobs:
      - build-redis:
          branch: master
          build_tag: ""
          final_tag: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
          filters:
            branches:
              only: develop
      - build-elasticsearch:
          build_tag: ""
          final_tag: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            branches:
              only: develop
      - build-rabbitmq:
          branch: develop
          build_tag: ""
          final_tag: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            branches:
              only: develop
      - build-hysds_base:
          branch: HC-589
          build_tag: ""
          final_tag: HC-589
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            branches:
              only: HC-589
      - build-hysds_dev:
          branch: HC-589
          build_tag: ""
          final_tag: HC-589
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
          filters:
            branches:
              only: HC-589
      - build-hysds_cuda_base:
          branch: develop
          build_tag: ""
          final_tag: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
          filters:
            branches:
              only: develop
      - build-hysds_cuda_dev:
          branch: develop
          build_tag: ""
          final_tag: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_cuda_base
          filters:
            branches:
              only: develop
      - build-hysds_verdi_pge_base:
          puppet_branch: HC-589
          build_tag: ""
          final_tag: HC-589
          framework_branch: HC-589
          hysds_release: develop
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            branches:
              only: HC-589
      - build-hysds_cuda_pge_base:
          puppet_branch: docker
          build_tag: ""
          final_tag: HC-589
          framework_branch: HC-589
          hysds_release: develop
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_cuda_base
            - build-hysds_cuda_dev
          filters:
            branches:
              only: develop
      - build-hysds_mozart:
          puppet_branch: docker
          build_tag: ""
          final_tag: develop
          framework_branch: develop
          hysds_release: develop
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            branches:
              only: develop
      - build-hysds_metrics:
          puppet_branch: docker
          build_tag: ""
          final_tag: develop
          framework_branch: develop
          hysds_release: develop
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            branches:
              only: develop
      - build-hysds_grq:
          puppet_branch: docker
          build_tag: ""
          final_tag: develop
          framework_branch: develop
          hysds_release: develop
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            branches:
              only: develop
      - build-hysds_cont_int:
          puppet_branch: docker
          build_tag: ""
          final_tag: develop
          framework_branch: develop
          hysds_release: develop
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            branches:
              only: develop
      - deploy:
          build_tag: ""
          final_tag: HC-589
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_verdi_pge_base
          filters:
            branches:
              only: HC-589
  build-deploy-release:
    jobs:
      - build-redis:
          branch: master
          build_tag: $CIRCLE_TAG
          final_tag: latest
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-elasticsearch:
          build_tag: $CIRCLE_TAG
          final_tag: latest
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-rabbitmq:
          branch: develop
          build_tag: $CIRCLE_TAG
          final_tag: latest
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_base:
          branch: develop
          build_tag: $CIRCLE_TAG
          final_tag: latest
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_dev:
          branch: develop
          build_tag: $CIRCLE_TAG
          final_tag: latest
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_cuda_base:
          branch: develop
          build_tag: $CIRCLE_TAG
          final_tag: latest
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_cuda_dev:
          branch: develop
          build_tag: $CIRCLE_TAG
          final_tag: latest
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_cuda_base
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_verdi_pge_base:
          puppet_branch: docker
          build_tag: $CIRCLE_TAG
          final_tag: latest
          framework_branch: $CIRCLE_TAG
          hysds_release: $CIRCLE_TAG
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_cuda_pge_base:
          puppet_branch: docker
          build_tag: $CIRCLE_TAG
          final_tag: latest
          framework_branch: $CIRCLE_TAG
          hysds_release: $CIRCLE_TAG
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_cuda_base
            - build-hysds_cuda_dev
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_mozart:
          puppet_branch: docker
          build_tag: $CIRCLE_TAG
          final_tag: latest
          framework_branch: $CIRCLE_TAG
          hysds_release: $CIRCLE_TAG
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_metrics:
          puppet_branch: docker
          build_tag: $CIRCLE_TAG
          final_tag: latest
          framework_branch: $CIRCLE_TAG
          hysds_release: $CIRCLE_TAG
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_grq:
          puppet_branch: docker
          build_tag: $CIRCLE_TAG
          final_tag: latest
          framework_branch: $CIRCLE_TAG
          hysds_release: $CIRCLE_TAG
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - build-hysds_cont_int:
          puppet_branch: docker
          build_tag: $CIRCLE_TAG
          final_tag: latest
          framework_branch: $CIRCLE_TAG
          hysds_release: $CIRCLE_TAG
          base_branch: develop
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_base
            - build-hysds_dev
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - deploy:
          build_tag: $CIRCLE_TAG
          final_tag: latest
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - build-hysds_verdi_pge_base
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - export-support-assets:
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
      - deploy-support-assets:
          context:
            - docker-hub-creds
            - git-oauth-token
          requires:
            - export-support-assets
          filters:
            tags:
              only: /^v6.*/
            branches:
              ignore: /.*/
